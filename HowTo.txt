Documentation using sphinx rtd theme
=======================================

Sub-topics, What is ... ?
---------------------------
1. Python venv 

2. Sphinx 

3. RTD (Read the Docs) Sphinx theme 

4. reStructuredText (it's a plaintext markup language)

    What is markup ?
    markup(in general) is just a way of providing functionality above plain text. For example: formatting, links, images etc.

    What is Markdown ?

    1. Markdown is an easy-to-use simplified markup language that is an alternative to using HTML. 

    2. Standard HTML uses tags to surround plain text to specify how that text displays. 

       For example, if you want a line to display as a HEADING 1 the standard syntax is to enclosed the plain text word with HTML tags,<H1>HEADING 1</H1>. 
       When the text displays in a browser, browsers recognize the HTML tags and display the text as HEADING 1.

       Markdown language simplifies formatting plain text by using keyboard strokes. For example, to display a HEADING 1 the Markdown syntax is to precede the plain text word with the Markdown hash tag #HEADING 1. When the text displays in a browser, browsers recognize the Markdown syntax and display the text as HEADING 1.



Useful cmds to setup tools & env 
---------------------------------

1. Setup python venv using python 3.8
    $ python -m venv <project-name>

2. How to activate and deactivate python virtual environment
    $ source <venv-abs-path>/bin/activate
    $ deactivate

3. Install sphinx
    $ pip install sphinx (after sourcing the venv in step 2)

4. Setup sphinx for project
    $ mkdir <project-dir>/docs; cd ./docs
    $ sphinx-quickstart

    Note: Create separate source and build dir when configuring sphinx.

5. Install "Read the Docs" sphinx theme (3rd party theme)
    $ pip install sphinx_rtd_theme

6. Create gh-pages branch
    - Go to Settings --> Pages --> Build and deployment --> Deploy from a branch

7. Setup
    - git clone https://github.com/prashant-gaur/documentation-using-sphinx-example.git
    - cd documentation-using-sphinx-example
    - git fetch orgin gh-pages
    - git checkout gh-pages
    - git worktree add --checkout build/html gh-pages

8. Configure `git push` to push both branches
    - git config remote.origin.push refs/heads/main:refs/heads/main
    - git config --add remote.origin.push refs/heads/gh-pages:refs/heads/gh-pages

9 After creating static webpages for the first time, push the build/html to remote branch gh-pages using,
    - git subtree push --prefix build/html origin gh-pages (git subtree push --prefix <rel-folder-location> origin <branch>)



Useful links
---------------------------------
Read-the-Docs wiki - https://sphinx-rtd-theme.readthedocs.io/en/stable/index.html

Deploy using GitHub workflow - https://coderefinery.github.io/documentation/gh_workflow/

Using markdown with Read-the-Docs theme - https://docs.readthedocs.io/en/stable/intro/getting-started-with-sphinx.html#using-markdown-with-sphinx

Hexo related links
---------------------------------
hexo-theme-icarus - https://github.com/ppoffice/hexo-theme-icarus

Sample logbook using hexo - https://leimao.github.io/

Simple steps to build static website using hexo - https://medium.com/techtofreedom/3-steps-to-build-your-static-website-with-hexo-and-github-pages-9bc9b26a24c2


reStructuredText
----------------------------------
Primer - https://www.sphinx-doc.org/en/master/usage/restructuredtext/basics.html#directives

Quick reference - https://docutils.sourceforge.io/docs/user/rst/quickref.html